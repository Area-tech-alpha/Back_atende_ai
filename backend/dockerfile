# Usa a imagem base do Node.js
# Usamos a versão 20-slim para uma imagem mais leve
FROM node:20-slim

# Instala as dependências de build necessárias para algumas bibliotecas Node.js
# como `bcrypt` que requerem Python e g++
RUN apt-get update && apt-get install -y python3 make g++ curl && rm -rf /var/lib/apt/lists/*

# Define o diretório de trabalho dentro do container
WORKDIR /app

# Copia os arquivos de configuração do projeto e instala as dependências
COPY package.json ./
COPY package-lock.json ./
# Instala as dependências de producao.
# A flag '--legacy-peer-deps' pode ser necessaria dependendo da versao das dependencias.
RUN npm install --legacy-peer-deps --production

# Copia o restante do código da aplicacao
COPY . .

# Expõe a porta que a aplicação irá usar
EXPOSE 3000

# Comando para rodar a aplicação quando o container iniciar.
# O comando 'start' é o padrão para ambientes de produção.
CMD [ "npm", "run", "start" ]
