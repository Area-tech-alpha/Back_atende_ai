# Usa a imagem base do Node.js
# Usamos a versão 20-slim para uma imagem mais leve
FROM node:20-slim

# Instala as dependências de build necessárias para algumas bibliotecas Node.js
# como `bcrypt` que requerem Python e g++
RUN apt-get update && apt-get install -y python3 make g++ curl && rm -rf /var/lib/apt/lists/*

# Define o diretório de trabalho dentro do container
WORKDIR /app

# Copia os arquivos de configuração do projeto e instala as dependências
# O contexto de build já é a pasta 'backend', então não precisamos do prefixo
COPY package.json ./
COPY package-lock.json ./
RUN npm install --legacy-peer-deps

# Copia o restante do código da aplicação backend
# O ponto final '.' no destino refere-se ao WORKDIR, ou seja, /app
COPY . .

# Expõe a porta que a aplicação irá usar
EXPOSE 3000

# Comando para rodar a aplicação quando o container iniciar
# Usamos 'npm run dev' para facilitar o desenvolvimento
CMD [ "npm", "run", "dev" ]
