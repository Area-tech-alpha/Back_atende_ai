name: Quick Deploy (Development)

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  quick-test:
    name: Teste Rápido
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Setup Node.js para o frontend com cache otimizado
    - name: Setup Node.js (Frontend)
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json' 

    - name: Instalar dependências frontend
      run: cd frontend && npm ci

    # Setup Node.js para o backend com cache otimizado
    - name: Setup Node.js (Backend)
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json' 

    - name: Instalar dependências backend
      run: cd backend && npm ci

    # A partir daqui, as dependências estar\u00e3o instaladas para os pr\u00f3ximos passos.
    - name: Lint frontend
      run: cd frontend && npm run lint

    - name: Build Frontend
      run: cd frontend && npm run build

    - name: Verificar backend
      run: cd backend && node -c server.js

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Build da imagem do frontend
    - name: Build Docker image (Frontend)
      run: |
        docker build -t atende-frontend:quick-test -f ./frontend/Dockerfile .

    # Build da imagem do backend
    - name: Build Docker image (Backend)
      run: |
        docker build -t atende-backend:quick-test -f ./backend/Dockerfile .
    
    # Testa os containers
    - name: Test Docker containers
      run: |
        # Inicia o container do backend
        docker run --rm -d -p 3000:3000 --name quick-test-backend atende-backend:quick-test
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop quick-test-backend

        # Inicia o container do frontend
        docker run --rm -d -p 8080:80 --name quick-test-frontend atende-frontend:quick-test
        sleep 10
        curl -f http://localhost:8080 || exit 1
        docker stop quick-test-frontend

    - name: Finalizado com sucesso
      run: echo "✅ Quick deploy passou"
